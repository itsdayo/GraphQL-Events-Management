{
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/oladayoogundipe/eventManagement/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/oladayoogundipe/eventManagement\",\"filename\":\"/Users/oladayoogundipe/eventManagement/server.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/oladayoogundipe/eventManagement\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.14.2": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/oladayoogundipe/eventManagement/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/oladayoogundipe/eventManagement",
      "filename": "/Users/oladayoogundipe/eventManagement/server.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/oladayoogundipe/eventManagement",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/oladayoogundipe/eventManagement/server.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/oladayoogundipe/eventManagement/server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/oladayoogundipe/eventManagement/",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "require(\"@babel/polyfill\");\n\nrequire(\"@babel/register\")({\n  ignore: [/\\/(build|node_modules)\\//],\n  presets: [\"@babel/preset-env\"]\n});\n\nvar express = require(\"express\");\n\nvar ParseServer = require(\"parse-server\").ParseServer;\n\nvar path = require(\"path\");\n\nconst GraphQLHTTP = require(\"express-graphql\").graphqlHTTP;\n\nconst {\n  schema\n} = require(\"./graphql/schema\");\n\nconst fetch = require(\"node-fetch\");\n\nconst {\n  v4: uuidv4\n} = require(\"uuid\");\n\nvar app = express(); // Serve static assets from the /public folder\n\napp.use(\"/public\", express.static(path.join(__dirname, \"/public\")));\nvar port = process.env.PORT || 1337;\n\nvar httpServer = require(\"http\").createServer(app);\n\nhttpServer.listen(port, function () {\n  console.log(\"parse-server-example running on port \" + port + \".\");\n}); // The root provides a resolver function for each API endpoint\n\nfetch(\"http://assets.aloompa.com.s3.amazonaws.com/rappers/hiphopfest.json\").then(res => {\n  return res.json();\n}).then(data => {\n  const appsHandler = {\n    getAppsName() {\n      return data.apps[0].name;\n    },\n\n    getAppsId() {\n      return data.apps[0].id;\n    },\n\n    getApps() {\n      return data.apps.map(singleApp => {\n        return singleApp;\n      });\n    },\n\n    getAppById(id) {\n      let appsArray = data.apps.map(singleApp => {\n        if (singleApp.id === id) {\n          return singleApp;\n        }\n      });\n      appsArray = appsArray.filter(appNotNull => appNotNull != null);\n      return appsArray[0];\n    }\n\n  };\n  const stagesHandler = {\n    getStages() {\n      return data.stages.map(singleStage => {\n        return singleStage;\n      });\n    },\n\n    getStageById(id) {\n      let stagesArray = data.stages.map(singleStage => {\n        if (singleStage.id === id) {\n          return singleStage;\n        }\n      });\n      stagesArray = stagesArray.filter(stageNotNull => stageNotNull != null);\n      return stagesArray[0];\n    },\n\n    getStageByName(name) {\n      let stagesArray = data.stages.map(singleStage => {\n        if (singleStage.name.includes(name)) {\n          return singleStage;\n        }\n      });\n      stagesArray = stagesArray.filter(stageNotNull => stageNotNull != null);\n      return stagesArray;\n    },\n\n    getStagesByEventId(eventId) {\n      let eventsArray = data.events.map(event => {\n        if (event.id === eventId) {\n          return event;\n        }\n      });\n      eventsArray = eventsArray.filter(event => event != undefined);\n      const stageId = eventsArray[0].stageId;\n      let stagesArray = data.stages.map(stage => {\n        if (stage.id === stageId) {\n          return stage;\n        }\n      });\n      stagesArray = stagesArray.filter(stage => stage != undefined);\n      return stagesArray[0];\n    },\n\n    addStage(name) {\n      const allData = data;\n      const singleStage = {\n        id: uuidv4(),\n        name: name\n      };\n      allData.events = eventsHandler.getEvents();\n      allData.apps = appsHandler.getApps();\n      let stagesArray = data.stages;\n      stagesArray = stagesArray.concat(singleStage);\n      allData.stages = stagesArray;\n      return allData;\n    },\n\n    editStage(stageId, name) {\n      const allData = data;\n      allData.events = eventsHandler.getEvents();\n      allData.apps = appsHandler.getApps();\n      let stagesArray = data.stages.map(stage => {\n        if (stage.id === stageId) {\n          stage.name = name;\n        }\n\n        return stage;\n      });\n      allData.stages = stagesArray;\n      return allData;\n    },\n\n    removeStage(id) {\n      const allData = data;\n      allData.events = eventsHandler.getEvents();\n      allData.apps = appsHandler.getApps();\n      let stagesArray = data.stages.filter(stage => stage.id != id);\n      allData.stages = stagesArray;\n      return allData;\n    }\n\n  };\n  const eventsHandler = {\n    getEventById(id) {\n      let eventsArray = data.events.map(singleEvent => {\n        if (singleEvent.id === id) {\n          return singleEvent;\n        }\n      });\n      eventsArray = eventsArray.filter(eventNotNull => eventNotNull != null);\n      return eventsArray[0];\n    },\n\n    getEvents() {\n      return data.events.map(singleEvent => {\n        return singleEvent;\n      });\n    },\n\n    getEventByName(name) {\n      let eventsArray = data.events.map(singleEvent => {\n        if (singleEvent.name.includes(name)) {\n          return singleEvent;\n        }\n      });\n      eventsArray = eventsArray.filter(eventNotNull => eventNotNull != null);\n      return eventsArray;\n    },\n\n    getEventsByDate(start, end) {\n      const eventsArray = data.events.map(event => {\n        if (event.startsAt <= start && event.endsAt >= end) {\n          return event;\n        }\n      });\n      return eventsArray.filter(event => event != null);\n    },\n\n    getEventsByAppId(appId) {\n      const eventsArray = data.events.map(event => {\n        if (event.appId === appId) {\n          return event;\n        }\n      });\n      return eventsArray.filter(event => event != null);\n    },\n\n    getEventsByStageId(stageId) {\n      let eventsArray = data.events.map(singleEvent => {\n        if (singleEvent.stageId === stageId) {\n          return singleEvent;\n        }\n      });\n      return eventsArray.filter(event => event != undefined);\n    },\n\n    getEventsByStageId(stageId) {\n      let eventsArray = data.events.map(singleEvent => {\n        if (singleEvent.stageId === stageId) {\n          return singleEvent;\n        }\n      });\n      return eventsArray.filter(event => event != undefined);\n    },\n\n    addEvent(appId, stageId, name, description, image, startsAt, endsAt) {\n      const allData = data;\n      const singleEvent = {\n        id: uuidv4(),\n        appId: appId,\n        stageId: stageId,\n        name: name,\n        description: description,\n        image: image,\n        startsAt: startsAt,\n        endsAt: endsAt\n      };\n      allData.stages = stagesHandler.getStages();\n      allData.apps = appsHandler.getApps();\n      let eventsArray = data.events;\n      eventsArray = eventsArray.concat(singleEvent);\n      allData.events = eventsArray;\n      return allData;\n    },\n\n    editEvent(eventId, appId, stageId, name, description, image, startsAt, endsAt) {\n      const allData = data;\n      allData.stages = stagesHandler.getStages();\n      allData.apps = appsHandler.getApps();\n      let eventsArray = data.events.map(event => {\n        if (event.id === eventId) {\n          event.appId = appId;\n          event.stageId = stageId;\n          event.name = name;\n          event.description = description;\n          event.image = image;\n          event.startsAt = startsAt;\n          event.endsAt = endsAt;\n        }\n\n        return event;\n      });\n      allData.events = eventsArray;\n      return allData;\n    },\n\n    removeEvent(id) {\n      const allData = data;\n      allData.stages = stagesHandler.getStages();\n      allData.apps = appsHandler.getApps();\n      let eventsArray = data.events.filter(event => event.id != id);\n      allData.events = eventsArray;\n      return allData;\n    }\n\n  };\n  var rootResolver = {\n    data: () => data,\n    getAllApps: () => {\n      return appsHandler.getApps();\n    },\n    getAllStages: () => {\n      return stagesHandler.getStages();\n    },\n    getAllEvents: () => {\n      return eventsHandler.getEvents();\n    },\n    getAppById: args => {\n      const appId = args.id;\n      return appsHandler.getAppById(appId);\n    },\n    getStageById: args => {\n      const stageId = args.id;\n      return stagesHandler.getStageById(stageId);\n    },\n    getEventById: args => {\n      const eventId = args.id;\n      return eventsHandler.getEventById(eventId);\n    },\n    getStageByName: args => {\n      const stageName = args.name;\n      return stagesHandler.getStageByName(stageName);\n    },\n    getEventByName: args => {\n      const eventName = args.name;\n      return eventsHandler.getEventByName(eventName);\n    },\n    getEventsByDate: args => {\n      const start = args.startsAt;\n      const end = args.endsAt;\n      return eventsHandler.getEventsByDate(start, end);\n    },\n    getEventsByAppId: args => {\n      const appId = args.appId;\n      return eventsHandler.getEventsByAppId(appId);\n    },\n    getStagesByEventId: args => {\n      const eventId = args.eventId;\n      return stagesHandler.getStagesByEventId(eventId);\n    },\n    getEventsByStageId: args => {\n      const stageId = args.stageId;\n      return eventsHandler.getEventsByStageId(stageId);\n    },\n    editStage: args => {\n      const id = args.id;\n      const name = args.name;\n      return stagesHandler.editStage(id, name);\n    },\n    addStage: args => {\n      const name = args.name;\n      return stagesHandler.addStage(name);\n    },\n    removeStage: args => {\n      const id = args.id;\n      return stagesHandler.removeStage(id);\n    },\n    addEvent: args => {\n      const appId = args.appId;\n      const stageId = args.stageId;\n      const name = args.name;\n      const description = args.description;\n      const image = args.image;\n      const startsAt = args.startsAt;\n      const endsAt = args.endsAt;\n      return eventsHandler.addEvent(appId, stageId, name, description, image, startsAt, endsAt);\n    },\n    editEvent: args => {\n      const id = args.id;\n      const appId = args.appId;\n      const stageId = args.stageId;\n      const name = args.name;\n      const description = args.description;\n      const image = args.image;\n      const startsAt = args.startsAt;\n      const endsAt = args.endsAt;\n      return eventsHandler.editEvent(id, appId, stageId, name, description, image, startsAt, endsAt);\n    },\n    removeEvent: args => {\n      const id = args.id;\n      return eventsHandler.removeEvent(id);\n    }\n  };\n  app.use(\"/graphql\", GraphQLHTTP(request => {\n    return {\n      rootValue: rootResolver,\n      graphiql: true,\n      pretty: true,\n      schema: schema,\n      context: {\n        sessionToken: request.headers[\"x-parse-session-token\"]\n      }\n    };\n  }));\n}); // This will enable the Live Query real-time server\n\nParseServer.createLiveQueryServer(httpServer);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "require",
        "ignore",
        "presets",
        "express",
        "ParseServer",
        "path",
        "GraphQLHTTP",
        "graphqlHTTP",
        "schema",
        "fetch",
        "v4",
        "uuidv4",
        "app",
        "use",
        "static",
        "join",
        "__dirname",
        "port",
        "process",
        "env",
        "PORT",
        "httpServer",
        "createServer",
        "listen",
        "console",
        "log",
        "then",
        "res",
        "json",
        "data",
        "appsHandler",
        "getAppsName",
        "apps",
        "name",
        "getAppsId",
        "id",
        "getApps",
        "map",
        "singleApp",
        "getAppById",
        "appsArray",
        "filter",
        "appNotNull",
        "stagesHandler",
        "getStages",
        "stages",
        "singleStage",
        "getStageById",
        "stagesArray",
        "stageNotNull",
        "getStageByName",
        "includes",
        "getStagesByEventId",
        "eventId",
        "eventsArray",
        "events",
        "event",
        "undefined",
        "stageId",
        "stage",
        "addStage",
        "allData",
        "eventsHandler",
        "getEvents",
        "concat",
        "editStage",
        "removeStage",
        "getEventById",
        "singleEvent",
        "eventNotNull",
        "getEventByName",
        "getEventsByDate",
        "start",
        "end",
        "startsAt",
        "endsAt",
        "getEventsByAppId",
        "appId",
        "getEventsByStageId",
        "addEvent",
        "description",
        "image",
        "editEvent",
        "removeEvent",
        "rootResolver",
        "getAllApps",
        "getAllStages",
        "getAllEvents",
        "args",
        "stageName",
        "eventName",
        "request",
        "rootValue",
        "graphiql",
        "pretty",
        "context",
        "sessionToken",
        "headers",
        "createLiveQueryServer"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/oladayoogundipe/eventManagement/",
      "sourcesContent": [
        "require(\"@babel/polyfill\");\n\nrequire(\"@babel/register\")({\n  ignore: [/\\/(build|node_modules)\\//],\n  presets: [\"@babel/preset-env\"],\n});\n\nvar express = require(\"express\");\nvar ParseServer = require(\"parse-server\").ParseServer;\nvar path = require(\"path\");\n\n\n\nconst GraphQLHTTP = require(\"express-graphql\").graphqlHTTP;\nconst { schema } = require(\"./graphql/schema\");\n\nconst fetch = require(\"node-fetch\");\nconst { v4: uuidv4 } = require(\"uuid\");\nvar app = express();\n\n// Serve static assets from the /public folder\napp.use(\"/public\", express.static(path.join(__dirname, \"/public\")));\n\n\n\n\n\n\n\nvar port = process.env.PORT || 1337;\nvar httpServer = require(\"http\").createServer(app);\nhttpServer.listen(port, function() {\n  console.log(\"parse-server-example running on port \" + port + \".\");\n});\n\n// The root provides a resolver function for each API endpoint\n\nfetch(\"http://assets.aloompa.com.s3.amazonaws.com/rappers/hiphopfest.json\")\n  .then((res) => {\n    return res.json();\n  })\n  .then((data) => {\n    const appsHandler = {\n      getAppsName() {\n        return data.apps[0].name;\n      },\n      getAppsId() {\n        return data.apps[0].id;\n      },\n      getApps() {\n        return data.apps.map((singleApp) => {\n          return singleApp;\n        });\n      },\n      getAppById(id) {\n        let appsArray = data.apps.map((singleApp) => {\n          if (singleApp.id === id) {\n            return singleApp;\n          }\n        });\n        appsArray = appsArray.filter((appNotNull) => appNotNull != null);\n        return appsArray[0];\n      },\n    };\n\n    const stagesHandler = {\n      getStages() {\n        return data.stages.map((singleStage) => {\n          return singleStage;\n        });\n      },\n\n      getStageById(id) {\n        let stagesArray = data.stages.map((singleStage) => {\n          if (singleStage.id === id) {\n            return singleStage;\n          }\n        });\n        stagesArray = stagesArray.filter(\n          (stageNotNull) => stageNotNull != null\n        );\n        return stagesArray[0];\n      },\n\n      getStageByName(name) {\n        let stagesArray = data.stages.map((singleStage) => {\n          if (singleStage.name.includes(name)) {\n            return singleStage;\n          }\n        });\n        stagesArray = stagesArray.filter(\n          (stageNotNull) => stageNotNull != null\n        );\n        return stagesArray;\n      },\n      getStagesByEventId(eventId) {\n        let eventsArray = data.events.map((event) => {\n          if (event.id === eventId) {\n            return event;\n          }\n        });\n\n        eventsArray = eventsArray.filter((event) => event != undefined);\n\n        const stageId = eventsArray[0].stageId;\n\n        let stagesArray = data.stages.map((stage) => {\n          if (stage.id === stageId) {\n            return stage;\n          }\n        });\n        stagesArray = stagesArray.filter((stage) => stage != undefined);\n\n        return stagesArray[0];\n      },\n      addStage(name) {\n        const allData = data;\n        const singleStage = {\n          id: uuidv4(),\n          name: name,\n        };\n        allData.events = eventsHandler.getEvents();\n        allData.apps = appsHandler.getApps();\n        let stagesArray = data.stages;\n        stagesArray = stagesArray.concat(singleStage);\n        allData.stages = stagesArray;\n\n        return allData;\n      },\n\n      editStage(stageId, name) {\n        const allData = data;\n        allData.events = eventsHandler.getEvents();\n        allData.apps = appsHandler.getApps();\n        let stagesArray = data.stages.map((stage) => {\n          if (stage.id === stageId) {\n            stage.name = name;\n          }\n          return stage;\n        });\n        allData.stages = stagesArray;\n\n        return allData;\n      },\n\n      removeStage(id) {\n        const allData = data;\n\n        allData.events = eventsHandler.getEvents();\n\n        allData.apps = appsHandler.getApps();\n        let stagesArray = data.stages.filter((stage) => stage.id != id);\n        allData.stages = stagesArray;\n\n        return allData;\n      },\n    };\n    const eventsHandler = {\n      getEventById(id) {\n        let eventsArray = data.events.map((singleEvent) => {\n          if (singleEvent.id === id) {\n            return singleEvent;\n          }\n        });\n        eventsArray = eventsArray.filter(\n          (eventNotNull) => eventNotNull != null\n        );\n        return eventsArray[0];\n      },\n      getEvents() {\n        return data.events.map((singleEvent) => {\n          return singleEvent;\n        });\n      },\n      getEventByName(name) {\n        let eventsArray = data.events.map((singleEvent) => {\n          if (singleEvent.name.includes(name)) {\n            return singleEvent;\n          }\n        });\n        eventsArray = eventsArray.filter(\n          (eventNotNull) => eventNotNull != null\n        );\n        return eventsArray;\n      },\n      getEventsByDate(start, end) {\n        const eventsArray = data.events.map((event) => {\n          if (event.startsAt <= start && event.endsAt >= end) {\n            return event;\n          }\n        });\n        return eventsArray.filter((event) => event != null);\n      },\n      getEventsByAppId(appId) {\n        const eventsArray = data.events.map((event) => {\n          if (event.appId === appId) {\n            return event;\n          }\n        });\n\n        return eventsArray.filter((event) => event != null);\n      },\n\n      getEventsByStageId(stageId) {\n        let eventsArray = data.events.map((singleEvent) => {\n          if (singleEvent.stageId === stageId) {\n            return singleEvent;\n          }\n        });\n\n        return eventsArray.filter((event) => event != undefined);\n      },\n\n      getEventsByStageId(stageId) {\n        let eventsArray = data.events.map((singleEvent) => {\n          if (singleEvent.stageId === stageId) {\n            return singleEvent;\n          }\n        });\n\n        return eventsArray.filter((event) => event != undefined);\n      },\n\n      addEvent(appId, stageId, name, description, image, startsAt, endsAt) {\n        const allData = data;\n        const singleEvent = {\n          id: uuidv4(),\n          appId: appId,\n          stageId: stageId,\n          name: name,\n          description: description,\n          image: image,\n          startsAt: startsAt,\n          endsAt: endsAt,\n        };\n\n        allData.stages = stagesHandler.getStages();\n        allData.apps = appsHandler.getApps();\n        let eventsArray = data.events;\n        eventsArray = eventsArray.concat(singleEvent);\n        allData.events = eventsArray;\n\n        return allData;\n      },\n      editEvent(\n        eventId,\n        appId,\n        stageId,\n        name,\n        description,\n        image,\n        startsAt,\n        endsAt\n      ) {\n        const allData = data;\n        allData.stages = stagesHandler.getStages();\n        allData.apps = appsHandler.getApps();\n        let eventsArray = data.events.map((event) => {\n          if (event.id === eventId) {\n            event.appId = appId;\n            event.stageId = stageId;\n            event.name = name;\n            event.description = description;\n            event.image = image;\n            event.startsAt = startsAt;\n            event.endsAt = endsAt;\n          }\n          return event;\n        });\n        allData.events = eventsArray;\n        return allData;\n      },\n\n      removeEvent(id) {\n        const allData = data;\n\n        allData.stages = stagesHandler.getStages();\n\n        allData.apps = appsHandler.getApps();\n        let eventsArray = data.events.filter((event) => event.id != id);\n        allData.events = eventsArray;\n\n        return allData;\n      },\n    };\n\n    var rootResolver = {\n      data: () => data,\n\n      getAllApps: () => {\n        return appsHandler.getApps();\n      },\n\n      getAllStages: () => {\n        return stagesHandler.getStages();\n      },\n\n      getAllEvents: () => {\n        return eventsHandler.getEvents();\n      },\n\n      getAppById: (args) => {\n        const appId = args.id;\n        return appsHandler.getAppById(appId);\n      },\n\n      getStageById: (args) => {\n        const stageId = args.id;\n        return stagesHandler.getStageById(stageId);\n      },\n\n      getEventById: (args) => {\n        const eventId = args.id;\n        return eventsHandler.getEventById(eventId);\n      },\n\n      getStageByName: (args) => {\n        const stageName = args.name;\n        return stagesHandler.getStageByName(stageName);\n      },\n\n      getEventByName: (args) => {\n        const eventName = args.name;\n        return eventsHandler.getEventByName(eventName);\n      },\n\n      getEventsByDate: (args) => {\n        const start = args.startsAt;\n        const end = args.endsAt;\n        return eventsHandler.getEventsByDate(start, end);\n      },\n\n      getEventsByAppId: (args) => {\n        const appId = args.appId;\n        return eventsHandler.getEventsByAppId(appId);\n      },\n\n      getStagesByEventId: (args) => {\n        const eventId = args.eventId;\n\n        return stagesHandler.getStagesByEventId(eventId);\n      },\n\n      getEventsByStageId: (args) => {\n        const stageId = args.stageId;\n\n        return eventsHandler.getEventsByStageId(stageId);\n      },\n\n      editStage: (args) => {\n        const id = args.id;\n        const name = args.name;\n        return stagesHandler.editStage(id, name);\n      },\n\n      addStage: (args) => {\n        const name = args.name;\n        return stagesHandler.addStage(name);\n      },\n      removeStage: (args) => {\n        const id = args.id;\n        return stagesHandler.removeStage(id);\n      },\n\n      addEvent: (args) => {\n        const appId = args.appId;\n        const stageId = args.stageId;\n        const name = args.name;\n        const description = args.description;\n        const image = args.image;\n        const startsAt = args.startsAt;\n        const endsAt = args.endsAt;\n        return eventsHandler.addEvent(\n          appId,\n          stageId,\n          name,\n          description,\n          image,\n          startsAt,\n          endsAt\n        );\n      },\n\n      editEvent: (args) => {\n        const id = args.id;\n        const appId = args.appId;\n        const stageId = args.stageId;\n        const name = args.name;\n        const description = args.description;\n        const image = args.image;\n        const startsAt = args.startsAt;\n        const endsAt = args.endsAt;\n\n        return eventsHandler.editEvent(\n          id,\n          appId,\n          stageId,\n          name,\n          description,\n          image,\n          startsAt,\n          endsAt\n        );\n      },\n      removeEvent: (args) => {\n        const id = args.id;\n        return eventsHandler.removeEvent(id);\n      },\n    };\n\n    app.use(\n      \"/graphql\",\n      GraphQLHTTP((request) => {\n        return {\n          rootValue: rootResolver,\n          graphiql: true,\n          pretty: true,\n          schema: schema,\n          context: { sessionToken: request.headers[\"x-parse-session-token\"] },\n        };\n      })\n    );\n  });\n\n// This will enable the Live Query real-time server\nParseServer.createLiveQueryServer(httpServer);\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1621127808445
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/oladayoogundipe/eventManagement/graphql/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/oladayoogundipe/eventManagement\",\"filename\":\"/Users/oladayoogundipe/eventManagement/graphql/schema.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/oladayoogundipe/eventManagement\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.14.2": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/oladayoogundipe/eventManagement/graphql/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/oladayoogundipe/eventManagement",
      "filename": "/Users/oladayoogundipe/eventManagement/graphql/schema.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/oladayoogundipe/eventManagement",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/oladayoogundipe/eventManagement/graphql/schema.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/oladayoogundipe/eventManagement/graphql/schema.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/oladayoogundipe/eventManagement/graphql/",
        "sourceFileName": "schema.js"
      }
    },
    "ast": null,
    "code": "/*eslint-disable no-unused-vars*/\nimport { GraphQLBoolean, GraphQLFloat, GraphQLID, GraphQLInt, GraphQLList, GraphQLNonNull, GraphQLObjectType, GraphQLScalarType, GraphQLSchema, GraphQLString } from \"graphql\";\n\nconst isAuthorized = async token => {\n  console.log(\"session\");\n  const query = new Parse.Query(Parse.Session).include(\"user\").equalTo(\"sessionToken\", token);\n  const session = await query.first({\n    useMasterKey: true\n  });\n\n  if (typeof session === \"undefined\") {\n    console.log(\"error with session\");\n    throw new Error(\"Unauthorized\");\n  }\n\n  return session;\n};\n/********* Object Types *********/\n// const mullsType1 = new GraphQLObjectType({\n//   name: \"Mulls1\",\n//   description: \"Mulls\",\n//   fields: () => ({\n//     id: {\n//       type: GraphQLID,\n//       resolve: (obj) => obj.id,\n//     },\n//     title: {\n//       type: GraphQLString,\n//       resolve: (obj) => obj.get(\"title\"),\n//     },\n//     user: {\n//       type: userType,\n//       resolve: (obj) => obj.get(\"user\"),\n//     },\n//   }),\n// });\n\n\nconst mullsType = new GraphQLObjectType({\n  name: \"Mulls\",\n  description: \"A mull\",\n  fields: () => ({\n    id: {\n      type: GraphQLString,\n      resolve: obj => obj.id\n    },\n    mullTitle: {\n      type: GraphQLString,\n      resolve: obj => obj.get(\"mullTitle\")\n    },\n    photos: {\n      type: GraphQLString,\n      resolve: obj => obj.get(\"photos\")\n    },\n    name: {\n      type: GraphQLString,\n      resolve: obj => obj.get(\"name\")\n    },\n    projectTitle: {\n      type: GraphQLString,\n      resolve: obj => obj.get(\"projectTitle\")\n    },\n    userId: {\n      type: GraphQLString,\n      resolve: obj => obj.get(\"userId\")\n    }\n  })\n});\nconst mullsProjectType = new GraphQLObjectType({\n  name: \"MullsProjectType\",\n  description: \"mull project content\",\n  fields: () => ({\n    photos: {\n      type: GraphQLString,\n      resolve: obj => obj.get(\"title\")\n    },\n    name: {\n      type: GraphQLString,\n      resolve: obj => obj.get(\"name\")\n    },\n    projectTitle: {\n      type: GraphQLString,\n      resolve: obj => obj.get(\"projectTitle\")\n    }\n  })\n});\nconst userType = new GraphQLObjectType({\n  name: \"User\",\n  description: \"A simple user\",\n  fields: () => ({\n    id: {\n      type: GraphQLID,\n      resolve: obj => obj.id\n    },\n    username: {\n      type: GraphQLString,\n      resolve: obj => obj.get(\"username\")\n    },\n    name: {\n      type: GraphQLString,\n      resolve: obj => obj.get(\"name\")\n    },\n    occupation: {\n      type: GraphQLString,\n      resolve: obj => obj.get(\"occupation\")\n    },\n    company: {\n      type: GraphQLString,\n      resolve: obj => obj.get(\"company\")\n    },\n    location: {\n      type: GraphQLString,\n      resolve: obj => obj.get(\"location\")\n    },\n    personalWebsite: {\n      type: GraphQLString,\n      resolve: obj => obj.get(\"personalWebsite\")\n    },\n    bio: {\n      type: GraphQLString,\n      resolve: obj => obj.get(\"bio\")\n    },\n    profileImage: {\n      type: GraphQLString,\n      resolve: obj => obj.get(\"profileImage\")\n    },\n    sessionToken: {\n      type: GraphQLString,\n      resolve: obj => obj.getSessionToken()\n    } // mullsTitles: {\n    //   type: GraphQLList(GraphQLString),\n    //   resolve: (obj) => obj.get(\"mullsTitle\"),\n    // },\n    // mulls: {\n    //   type: mullsType,\n    //   resolve: (obj) => obj.get(\"mulls\"),\n    // },\n\n  })\n});\nconst postType = new GraphQLObjectType({\n  name: \"Post\",\n  description: \"A simple post message\",\n  fields: () => ({\n    id: {\n      type: GraphQLID,\n      resolve: obj => obj.id\n    },\n    message: {\n      type: GraphQLString,\n      resolve: obj => obj.get(\"message\")\n    },\n    author: {\n      type: userType,\n      resolve: obj => obj.get(\"author\")\n    }\n  })\n});\nconst projectType = new GraphQLObjectType({\n  name: \"Project\",\n  description: \"A project\",\n  fields: () => ({\n    id: {\n      type: GraphQLString,\n      resolve: obj => obj.id\n    },\n    title: {\n      type: GraphQLString,\n      resolve: obj => obj.get(\"title\")\n    },\n    description: {\n      type: GraphQLString,\n      resolve: obj => obj.get(\"description\")\n    },\n    coverPhotoUrl: {\n      type: GraphQLString,\n      resolve: obj => obj.get(\"coverPhotoUrl\")\n    },\n    published: {\n      type: GraphQLBoolean,\n      resolve: obj => obj.get(\"published\")\n    },\n    photoUrl: {\n      type: GraphQLString,\n      resolve: obj => obj.get(\"photoUrl\")\n    },\n    user: {\n      type: userType,\n      resolve: obj => obj.get(\"user\")\n    }\n  })\n});\n/********* Query Types *********/\n\nconst posts = {\n  type: new GraphQLList(postType),\n  description: \"list of posts\",\n  resolve: async (value, args, {\n    sessionToken\n  }) => {\n    const session = await isAuthorized(sessionToken);\n    var Post = Parse.Object.extend(\"Post\");\n    return new Parse.Query(Post).include(\"author\").find({\n      sessionToken\n    });\n  }\n};\nconst projects = {\n  type: new GraphQLList(projectType),\n  description: \"list of projects\",\n  resolve: async (value, args, {\n    sessionToken\n  }) => {\n    //const session = await isAuthorized(sessionToken);\n    const Project = Parse.Object.extend(\"Project\");\n    const projectAsc = new Parse.Query(Project);\n    projectAsc.descending(\"createdAt\"); // return new Parse.Query(Project).find();\n\n    return projectAsc.find({\n      sessionToken\n    });\n  }\n};\nconst user = {\n  type: userType,\n  description: \"query for user\",\n  resolve: async (value, args, {\n    sessionToken\n  }) => {\n    const session = await isAuthorized(sessionToken);\n    const User = Parse.Object.extend(\"User\");\n    const query = new Parse.Query(User);\n    const userInSession = session.get(\"user\");\n    query.equalTo(\"objectId\", userInSession.id);\n    var currentUser = await query.first({\n      sessionToken\n    });\n    return currentUser;\n  }\n};\nconst mulls = {\n  type: new GraphQLList(mullsType),\n  description: \"list of mulls\",\n  resolve: async (value, args, {\n    sessionToken\n  }) => {\n    //const session = await isAuthorized(sessionToken);\n    const User = Parse.Object.extend(\"User\"); // const userInSession = session.get(\"user\");\n\n    const query = new Parse.Query(User); //query.equalTo(\"objectId\", userInSession.id);\n\n    const currentUser = await query.first(); // return new Parse.Query(Project).find();\n\n    const Mulls = Parse.Object.extend(\"Mulls\");\n    const mullsQuery = new Parse.Query(Mulls); //projectAsc.descending(\"createdAt\");\n    // return new Parse.Query(Project).find();\n\n    mullsQuery.descending(\"createdAt\");\n    console.log(await mullsQuery.first()); //mullsQuery.descending(\"createdAt\");\n\n    return mullsQuery.find({\n      sessionToken\n    }); //return currentUser;\n  }\n};\nconst mullsProject = {\n  type: mullsProjectType,\n  description: \"mulls project content\",\n  resolve: async (value, args, {\n    sessionToken\n  }) => {\n    //const session = await isAuthorized(sessionToken);\n    const User = Parse.Object.extend(\"User\"); // const userInSession = session.get(\"user\");\n\n    const query = new Parse.Query(User); //query.equalTo(\"objectId\", userInSession.id);\n\n    const currentUser = await query.first(); // return new Parse.Query(Project).find();\n\n    const MullsProject = Parse.Object.extend(\"MullsProject\");\n    const mullsQuery = new Parse.Query(MullsProject); //projectAsc.descending(\"createdAt\");\n    // return new Parse.Query(Project).find();\n\n    console.log(await mullsQuery.first()); //mullsQuery.descending(\"createdAt\");\n\n    return await mullsQuery.first(); //return currentUser;\n  }\n};\nvar queryTypes = new GraphQLObjectType({\n  name: \"queries\",\n  description: \"All queries\",\n  fields: () => ({\n    posts,\n    projects,\n    user,\n    mulls\n  })\n});\n/********* Mutation Types *********/\n\nconst signUp = {\n  type: userType,\n  description: \"Create a new user\",\n  args: {\n    username: {\n      type: GraphQLString\n    },\n    email: {\n      type: GraphQLString\n    },\n    password: {\n      type: GraphQLString\n    }\n  },\n  resolve: (value, {\n    username,\n    email,\n    password\n  }) => {\n    var user = new Parse.User();\n    var User = Parse.Object.extend(\"User\");\n    var createdUser = new User();\n    createdUser.set(\"username\", username);\n    user.set(\"username\", username);\n    user.set(\"password\", password);\n    user.set(\"email\", email);\n    return user.signUp();\n  }\n};\nconst login = {\n  type: userType,\n  description: \"Connects the user\",\n  args: {\n    username: {\n      type: GraphQLString\n    },\n    password: {\n      type: GraphQLString\n    }\n  },\n  resolve: (value, {\n    username,\n    password\n  }) => {\n    var user = new Parse.User();\n    user.set(\"username\", username);\n    user.set(\"password\", password);\n    console.log(username, password);\n    return Parse.User.logIn(username, password);\n  }\n};\nconst createPost = {\n  type: postType,\n  description: \"add new post\",\n  args: {\n    message: {\n      type: GraphQLString\n    }\n  },\n  resolve: async (value, {\n    title,\n    caption\n  }, {\n    sessionToken\n  }) => {\n    const session = await isAuthorized(sessionToken);\n    var Post = Parse.Object.extend(\"Post\");\n    var post = new Post();\n    post.set(\"title\", title);\n    post.set(\"author\", session.get(\"user\"));\n    return post.save();\n  }\n};\nconst createProject = {\n  type: projectType,\n  description: \"add new project\",\n  args: {\n    title: {\n      type: GraphQLString\n    },\n    description: {\n      type: GraphQLString\n    },\n    coverPhotoUrl: {\n      type: GraphQLString\n    }\n  },\n  resolve: async (value, {\n    title,\n    description,\n    coverPhotoUrl\n  }, {\n    sessionToken\n  }) => {\n    const session = await isAuthorized(sessionToken);\n    const Project = Parse.Object.extend(\"Project\");\n    const project = new Project();\n    project.set({\n      title,\n      description,\n      coverPhotoUrl,\n      user: session.get(\"user\")\n    });\n    return project.save();\n  }\n};\nconst createMulls = {\n  type: mullsType,\n  description: \"add new project\",\n  args: {\n    mullTitle: {\n      type: GraphQLString\n    },\n    photos: {\n      type: GraphQLString\n    },\n    projectTitle: {\n      type: GraphQLString\n    },\n    name: {\n      type: GraphQLString\n    }\n  },\n  resolve: async (value, {\n    name,\n    photos,\n    projectTitle,\n    mullTitle\n  }, {\n    sessionToken\n  }) => {\n    const session = await isAuthorized(sessionToken); // const MullsProjectObject = Parse.Object.extend(\"MullsProject\");\n    // const mullsProject = new MullsProjectObject();\n    // mullsProject.set({\n    //   photos,\n    //   name,\n    //   projectTitle,\n    // });\n    // mullsProject.save();\n    // mullsProject.photos = photos;\n    // mullsProject.name = name;\n    // mullsProject.projectTitle = projectTitle;\n    // console.log(mullsProject, \"mullsProject\");\n\n    const MullsObject = Parse.Object.extend(\"Mulls\");\n    var mullsQuery = new Parse.Query(MullsObject);\n    const mulls1 = new MullsObject();\n    const userInSession = session.get(\"user\");\n    const userId = userInSession.id; //    mullsQuery.equalTo(\"title\", title);\n    // if ((await mullsQuery.first()) === undefined) {\n    //   currentMulls = new MullsObject();\n    //   currentMulls.set(\"title\", title);\n    // } else {\n    //   currentMulls = await mullsQuery.first();\n    // }\n\n    mulls1.set({\n      mullTitle,\n      name,\n      photos,\n      projectTitle,\n      userId //user: session.get(\"user\"),\n\n    });\n    return mulls1.save();\n  }\n};\nconst createMulls2 = {\n  type: mullsType,\n  description: \"add new project\",\n  args: {\n    title: {\n      type: GraphQLList(GraphQLString)\n    },\n    photos: {\n      type: GraphQLString\n    },\n    projectTitle: {\n      type: GraphQLString\n    },\n    name: {\n      type: GraphQLString\n    }\n  },\n  resolve: async (value, {\n    title,\n    photos,\n    projectTitle,\n    name\n  }, {\n    sessionToken\n  }) => {\n    // const session = await isAuthorized(sessionToken);\n    const MullsProjectObject = Parse.Object.extend(\"MullsProject\");\n    const mullsProject = new MullsProjectObject(); // mullsProject.set({\n    //   photos,\n    //   name,\n    //   projectTitle,\n    // });\n    //mullsProject.save();\n\n    mullsProject.photos = photos;\n    mullsProject.name = name;\n    mullsProject.projectTitle = projectTitle;\n    console.log(mullsProject, \"mullsProject\");\n    const MullsObject = Parse.Object.extend(\"Mulls\");\n    var mullsQuery = new Parse.Query(MullsObject);\n    let currentMulls = null;\n    const newMulls = new MullsObject(); //    mullsQuery.equalTo(\"title\", title);\n    // if ((await mullsQuery.first()) === undefined) {\n    //   currentMulls = new MullsObject();\n    //   currentMulls.set(\"title\", title);\n    // } else {\n    //   currentMulls = await mullsQuery.first();\n    // }\n\n    newMulls.set(\"mullsProject\", mullsProject); //newMulls.set(\"title\", title);\n    //newMulls.set(\"user\", session.get(\"user\"));\n    // newMulls.mullsProject = mullsProject;\n    // newMulls.title = title;\n    //newMulls.user = session.get(\"user\");\n\n    return newMulls.save(null, {\n      title: title\n    }); // return newMulls.save({\n    //   \"mullsProject\": mullsProject,\n    //   title: title,\n    //   user: session.get(\"user\"),\n    // });\n    // const User = Parse.Object.extend(\"User\");\n    // const query = new Parse.Query(User);\n    // const userInSession = session.get(\"user\");\n    // query.equalTo(\"objectId\", userInSession.id);\n    // const currentUser = await query.first();\n    // // currentUser.set({\n    // //   mulls: currentMulls,\n    // // });\n    // console.log(\"goodnight\");\n    // return currentUser.save(null, {\n    //   mulls: currentMulls,\n    //   useMasterKey: true,\n    //   sessionToken,\n    // });\n  }\n};\nconst updateProject = {\n  type: projectType,\n  description: \"update project\",\n  args: {\n    projectId: {\n      type: GraphQLString\n    },\n    photoUrl: {\n      type: GraphQLString\n    }\n  },\n  resolve: async (value, {\n    projectId,\n    photoUrl\n  }, {\n    sessionToken\n  }) => {\n    const Project = Parse.Object.extend(\"Project\");\n    var project = new Parse.Query(Project);\n    project.equalTo(\"objectId\", projectId);\n    const currentProject = await project.first();\n    currentProject.set({\n      photoUrl,\n      published: true\n    });\n    return currentProject.save();\n  }\n};\nconst updateProfile = {\n  type: userType,\n  description: \"update profile\",\n  args: {\n    username: {\n      type: GraphQLString\n    },\n    occupation: {\n      type: GraphQLString\n    },\n    company: {\n      type: GraphQLString\n    },\n    location: {\n      type: GraphQLString\n    },\n    personalWebsite: {\n      type: GraphQLString\n    },\n    bio: {\n      type: GraphQLString\n    },\n    profileImage: {\n      type: GraphQLString\n    }\n  },\n  resolve: async (value, {\n    username,\n    occupation,\n    company,\n    location,\n    personalWebsite,\n    bio,\n    profileImage\n  }, {\n    sessionToken\n  }) => {\n    const session = await isAuthorized(sessionToken);\n    const User = Parse.Object.extend(\"User\");\n    const query = new Parse.Query(User);\n    const userInSession = session.get(\"user\");\n    query.equalTo(\"objectId\", userInSession.id);\n    const currentUser = await query.first();\n    currentUser.set({\n      username,\n      occupation,\n      company,\n      location,\n      personalWebsite,\n      bio,\n      profileImage\n    });\n    return currentUser.save(null, {\n      useMasterKey: true,\n      sessionToken\n    });\n  }\n};\nconst updateMulls = {\n  type: mullsType,\n  description: \"update profile\",\n  args: {\n    title: {\n      type: GraphQLString\n    },\n    photos: {\n      type: GraphQLString\n    },\n    name: {\n      type: GraphQLString\n    }\n  },\n  resolve: async (value, {\n    title,\n    photos,\n    name\n  }, {\n    sessionToken\n  }) => {\n    const session = await isAuthorized(sessionToken);\n    const Mulls = Parse.Object.extend(\"Mulls\");\n    const Project = Parse.Object.extend(\"Project\");\n    var project = new Parse.Query(Project);\n    const mulls = new Mulls();\n    project.equalTo(\"objectId\", projectId);\n    const currentProject = await project.first();\n    mulls.set({\n      title,\n      photos,\n      name,\n      user: session.get(\"user\")\n    });\n    return project.save();\n  }\n}; // const createMulls = {\n//   type: userType,\n//   description: \"update mullboards\",\n//   args: {\n//     mulls: {\n//       type: mullsType,\n//     },\n//   },\n//   resolve: async (value, { mulls }, { sessionToken }) => {\n//     const session = await isAuthorized(sessionToken);\n//     const User = Parse.Object.extend(\"User\");\n//     const query = new Parse.Query(User);\n//     const userInSession = session.get(\"user\");\n//     query.equalTo(\"objectId\", userInSession.id);\n//     // const currentUser = await query.first();\n//     // const defaultMulls = [\"Branding\", \"Illustration\", \"UI/UX\"];\n//     // const newMullsList = defaultMulls.concat(mulls.title);\n//     // const userMulls = currentUser.mulls;\n//     // userMulls.title = newMullsList;\n//     // currentUser.set({\n//     //   mulls: userMulls,\n//     // });\n//     //return currentUser.save(null, { useMasterKey: true, sessionToken });\n//   },\n// };\n\nconst createMulls1 = {\n  type: userType,\n  description: \"add new project\",\n  args: {\n    title: {\n      type: GraphQLString\n    }\n  },\n  resolve: async (value, {\n    title,\n    photos\n  }, {\n    sessionToken\n  }) => {\n    const session = await isAuthorized(sessionToken);\n    const User = Parse.Object.extend(\"User\");\n    const Mulls = Parse.Object.extend(\"Mulls\");\n    const query = new Parse.Query(User); //var mullboards = new Mulls();\n    // mullboards.set(\"photos\", photos);\n    //mullboards.set(\"title\", title);\n\n    const userInSession = session.get(\"user\");\n    query.equalTo(\"objectId\", userInSession.id);\n    const currentUser = await query.first();\n    var query1 = new Parse.Query(User); //const mullsTitle = [];\n\n    query1.get(userInSession.id).then(object => {\n      let mullsTitle = [];\n      let formerMullsTitle = object.get(\"mullsTitle\");\n      const defaultTitles = [\"Branding\", \"Illustration\", \"UI/UX\"];\n\n      if (formerMullsTitle.length === 0) {\n        formerMullsTitle = formerMullsTitle.concat(defaultTitles);\n        console.log(\"length less than zero\");\n      }\n\n      mullsTitle = formerMullsTitle.concat(title);\n      console.log(mullsTitle, \"pizza\");\n      currentUser.set({\n        mullsTitle\n      });\n      return currentUser.save(null, {\n        useMasterKey: true,\n        sessionToken\n      });\n    }).catch(error => {// error is an instance of parse.error.\n    });\n  }\n};\nvar mutationTypes = new GraphQLObjectType({\n  name: \"mutation\",\n  description: \"All mutation\",\n  fields: () => ({\n    signUp,\n    login,\n    createPost,\n    createProject,\n    updateProject,\n    updateProfile,\n    createMulls //updateMulls,\n\n  })\n});\nexport const Schema = new GraphQLSchema({\n  query: queryTypes,\n  mutation: mutationTypes\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "schema.js"
      ],
      "names": [
        "GraphQLBoolean",
        "GraphQLFloat",
        "GraphQLID",
        "GraphQLInt",
        "GraphQLList",
        "GraphQLNonNull",
        "GraphQLObjectType",
        "GraphQLScalarType",
        "GraphQLSchema",
        "GraphQLString",
        "isAuthorized",
        "token",
        "console",
        "log",
        "query",
        "Parse",
        "Query",
        "Session",
        "include",
        "equalTo",
        "session",
        "first",
        "useMasterKey",
        "Error",
        "mullsType",
        "name",
        "description",
        "fields",
        "id",
        "type",
        "resolve",
        "obj",
        "mullTitle",
        "get",
        "photos",
        "projectTitle",
        "userId",
        "mullsProjectType",
        "userType",
        "username",
        "occupation",
        "company",
        "location",
        "personalWebsite",
        "bio",
        "profileImage",
        "sessionToken",
        "getSessionToken",
        "postType",
        "message",
        "author",
        "projectType",
        "title",
        "coverPhotoUrl",
        "published",
        "photoUrl",
        "user",
        "posts",
        "value",
        "args",
        "Post",
        "Object",
        "extend",
        "find",
        "projects",
        "Project",
        "projectAsc",
        "descending",
        "User",
        "userInSession",
        "currentUser",
        "mulls",
        "Mulls",
        "mullsQuery",
        "mullsProject",
        "MullsProject",
        "queryTypes",
        "signUp",
        "email",
        "password",
        "createdUser",
        "set",
        "login",
        "logIn",
        "createPost",
        "caption",
        "post",
        "save",
        "createProject",
        "project",
        "createMulls",
        "MullsObject",
        "mulls1",
        "createMulls2",
        "MullsProjectObject",
        "currentMulls",
        "newMulls",
        "updateProject",
        "projectId",
        "currentProject",
        "updateProfile",
        "updateMulls",
        "createMulls1",
        "query1",
        "then",
        "object",
        "mullsTitle",
        "formerMullsTitle",
        "defaultTitles",
        "length",
        "concat",
        "catch",
        "error",
        "mutationTypes",
        "Schema",
        "mutation"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/oladayoogundipe/eventManagement/graphql/",
      "sourcesContent": [
        "/*eslint-disable no-unused-vars*/\nimport {\n  GraphQLBoolean,\n  GraphQLFloat,\n  GraphQLID,\n  GraphQLInt,\n  GraphQLList,\n  GraphQLNonNull,\n  GraphQLObjectType,\n  GraphQLScalarType,\n  GraphQLSchema,\n  GraphQLString,\n} from \"graphql\";\n\nconst isAuthorized = async (token) => {\n  console.log(\"session\");\n\n  const query = new Parse.Query(Parse.Session)\n    .include(\"user\")\n    .equalTo(\"sessionToken\", token);\n  const session = await query.first({ useMasterKey: true });\n\n  if (typeof session === \"undefined\") {\n    console.log(\"error with session\");\n    throw new Error(\"Unauthorized\");\n  }\n  return session;\n};\n\n/********* Object Types *********/\n\n// const mullsType1 = new GraphQLObjectType({\n//   name: \"Mulls1\",\n//   description: \"Mulls\",\n//   fields: () => ({\n//     id: {\n//       type: GraphQLID,\n//       resolve: (obj) => obj.id,\n//     },\n//     title: {\n//       type: GraphQLString,\n//       resolve: (obj) => obj.get(\"title\"),\n//     },\n//     user: {\n//       type: userType,\n//       resolve: (obj) => obj.get(\"user\"),\n//     },\n//   }),\n// });\n\nconst mullsType = new GraphQLObjectType({\n  name: \"Mulls\",\n  description: \"A mull\",\n  fields: () => ({\n    id: {\n      type: GraphQLString,\n      resolve: (obj) => obj.id,\n    },\n    mullTitle: {\n      type: GraphQLString,\n      resolve: (obj) => obj.get(\"mullTitle\"),\n    },\n    photos: {\n      type: GraphQLString,\n      resolve: (obj) => obj.get(\"photos\"),\n    },\n    name: {\n      type: GraphQLString,\n      resolve: (obj) => obj.get(\"name\"),\n    },\n    projectTitle: {\n      type: GraphQLString,\n      resolve: (obj) => obj.get(\"projectTitle\"),\n    },\n    userId: {\n      type: GraphQLString,\n      resolve: (obj) => obj.get(\"userId\"),\n    },\n  }),\n});\n\nconst mullsProjectType = new GraphQLObjectType({\n  name: \"MullsProjectType\",\n  description: \"mull project content\",\n  fields: () => ({\n    photos: {\n      type: GraphQLString,\n      resolve: (obj) => obj.get(\"title\"),\n    },\n    name: {\n      type: GraphQLString,\n      resolve: (obj) => obj.get(\"name\"),\n    },\n    projectTitle: {\n      type: GraphQLString,\n      resolve: (obj) => obj.get(\"projectTitle\"),\n    },\n  }),\n});\n\nconst userType = new GraphQLObjectType({\n  name: \"User\",\n  description: \"A simple user\",\n  fields: () => ({\n    id: {\n      type: GraphQLID,\n      resolve: (obj) => obj.id,\n    },\n    username: {\n      type: GraphQLString,\n      resolve: (obj) => obj.get(\"username\"),\n    },\n    name: {\n      type: GraphQLString,\n      resolve: (obj) => obj.get(\"name\"),\n    },\n    occupation: {\n      type: GraphQLString,\n      resolve: (obj) => obj.get(\"occupation\"),\n    },\n    company: {\n      type: GraphQLString,\n      resolve: (obj) => obj.get(\"company\"),\n    },\n    location: {\n      type: GraphQLString,\n      resolve: (obj) => obj.get(\"location\"),\n    },\n    personalWebsite: {\n      type: GraphQLString,\n      resolve: (obj) => obj.get(\"personalWebsite\"),\n    },\n    bio: {\n      type: GraphQLString,\n      resolve: (obj) => obj.get(\"bio\"),\n    },\n    profileImage: {\n      type: GraphQLString,\n      resolve: (obj) => obj.get(\"profileImage\"),\n    },\n    sessionToken: {\n      type: GraphQLString,\n      resolve: (obj) => obj.getSessionToken(),\n    },\n    // mullsTitles: {\n    //   type: GraphQLList(GraphQLString),\n    //   resolve: (obj) => obj.get(\"mullsTitle\"),\n    // },\n    // mulls: {\n    //   type: mullsType,\n    //   resolve: (obj) => obj.get(\"mulls\"),\n    // },\n  }),\n});\n\nconst postType = new GraphQLObjectType({\n  name: \"Post\",\n  description: \"A simple post message\",\n  fields: () => ({\n    id: {\n      type: GraphQLID,\n      resolve: (obj) => obj.id,\n    },\n    message: {\n      type: GraphQLString,\n      resolve: (obj) => obj.get(\"message\"),\n    },\n    author: {\n      type: userType,\n      resolve: (obj) => obj.get(\"author\"),\n    },\n  }),\n});\n\nconst projectType = new GraphQLObjectType({\n  name: \"Project\",\n  description: \"A project\",\n  fields: () => ({\n    id: {\n      type: GraphQLString,\n      resolve: (obj) => obj.id,\n    },\n    title: {\n      type: GraphQLString,\n      resolve: (obj) => obj.get(\"title\"),\n    },\n    description: {\n      type: GraphQLString,\n      resolve: (obj) => obj.get(\"description\"),\n    },\n    coverPhotoUrl: {\n      type: GraphQLString,\n      resolve: (obj) => obj.get(\"coverPhotoUrl\"),\n    },\n    published: {\n      type: GraphQLBoolean,\n      resolve: (obj) => obj.get(\"published\"),\n    },\n    photoUrl: {\n      type: GraphQLString,\n      resolve: (obj) => obj.get(\"photoUrl\"),\n    },\n    user: {\n      type: userType,\n      resolve: (obj) => obj.get(\"user\"),\n    },\n  }),\n});\n\n/********* Query Types *********/\n\nconst posts = {\n  type: new GraphQLList(postType),\n  description: \"list of posts\",\n  resolve: async (value, args, { sessionToken }) => {\n    const session = await isAuthorized(sessionToken);\n    var Post = Parse.Object.extend(\"Post\");\n    return new Parse.Query(Post).include(\"author\").find({ sessionToken });\n  },\n};\n\nconst projects = {\n  type: new GraphQLList(projectType),\n  description: \"list of projects\",\n  resolve: async (value, args, { sessionToken }) => {\n    //const session = await isAuthorized(sessionToken);\n    const Project = Parse.Object.extend(\"Project\");\n    const projectAsc = new Parse.Query(Project);\n    projectAsc.descending(\"createdAt\");\n    // return new Parse.Query(Project).find();\n\n    return projectAsc.find({ sessionToken });\n  },\n};\n\nconst user = {\n  type: userType,\n  description: \"query for user\",\n  resolve: async (value, args, { sessionToken }) => {\n    const session = await isAuthorized(sessionToken);\n\n    const User = Parse.Object.extend(\"User\");\n    const query = new Parse.Query(User);\n\n    const userInSession = session.get(\"user\");\n    query.equalTo(\"objectId\", userInSession.id);\n\n    var currentUser = await query.first({ sessionToken });\n\n    return currentUser;\n  },\n};\n\nconst mulls = {\n  type: new GraphQLList(mullsType),\n  description: \"list of mulls\",\n  resolve: async (value, args, { sessionToken }) => {\n    //const session = await isAuthorized(sessionToken);\n    const User = Parse.Object.extend(\"User\");\n    // const userInSession = session.get(\"user\");\n    const query = new Parse.Query(User);\n    //query.equalTo(\"objectId\", userInSession.id);\n\n    const currentUser = await query.first();\n\n    // return new Parse.Query(Project).find();\n\n    const Mulls = Parse.Object.extend(\"Mulls\");\n    const mullsQuery = new Parse.Query(Mulls);\n\n    //projectAsc.descending(\"createdAt\");\n    // return new Parse.Query(Project).find();\n    mullsQuery.descending(\"createdAt\");\n\n    console.log(await mullsQuery.first());\n    //mullsQuery.descending(\"createdAt\");\n    return mullsQuery.find({ sessionToken });\n\n    //return currentUser;\n  },\n};\n\nconst mullsProject = {\n  type: mullsProjectType,\n  description: \"mulls project content\",\n  resolve: async (value, args, { sessionToken }) => {\n    //const session = await isAuthorized(sessionToken);\n    const User = Parse.Object.extend(\"User\");\n    // const userInSession = session.get(\"user\");\n    const query = new Parse.Query(User);\n    //query.equalTo(\"objectId\", userInSession.id);\n\n    const currentUser = await query.first();\n\n    // return new Parse.Query(Project).find();\n\n    const MullsProject = Parse.Object.extend(\"MullsProject\");\n    const mullsQuery = new Parse.Query(MullsProject);\n    //projectAsc.descending(\"createdAt\");\n    // return new Parse.Query(Project).find();\n\n    console.log(await mullsQuery.first());\n    //mullsQuery.descending(\"createdAt\");\n    return await mullsQuery.first();\n\n    //return currentUser;\n  },\n};\n\nvar queryTypes = new GraphQLObjectType({\n  name: \"queries\",\n  description: \"All queries\",\n  fields: () => ({\n    posts,\n    projects,\n    user,\n    mulls,\n  }),\n});\n/********* Mutation Types *********/\n\nconst signUp = {\n  type: userType,\n  description: \"Create a new user\",\n  args: {\n    username: {\n      type: GraphQLString,\n    },\n    email: {\n      type: GraphQLString,\n    },\n    password: {\n      type: GraphQLString,\n    },\n  },\n  resolve: (value, { username, email, password }) => {\n    var user = new Parse.User();\n    var User = Parse.Object.extend(\"User\");\n    var createdUser = new User();\n    createdUser.set(\"username\", username);\n\n    user.set(\"username\", username);\n    user.set(\"password\", password);\n    user.set(\"email\", email);\n    return user.signUp();\n  },\n};\n\nconst login = {\n  type: userType,\n  description: \"Connects the user\",\n  args: {\n    username: {\n      type: GraphQLString,\n    },\n    password: {\n      type: GraphQLString,\n    },\n  },\n  resolve: (value, { username, password }) => {\n    var user = new Parse.User();\n    user.set(\"username\", username);\n    user.set(\"password\", password);\n    console.log(username, password);\n    return Parse.User.logIn(username, password);\n  },\n};\n\nconst createPost = {\n  type: postType,\n  description: \"add new post\",\n  args: {\n    message: {\n      type: GraphQLString,\n    },\n  },\n  resolve: async (value, { title, caption }, { sessionToken }) => {\n    const session = await isAuthorized(sessionToken);\n    var Post = Parse.Object.extend(\"Post\");\n    var post = new Post();\n    post.set(\"title\", title);\n\n    post.set(\"author\", session.get(\"user\"));\n\n    return post.save();\n  },\n};\n\nconst createProject = {\n  type: projectType,\n  description: \"add new project\",\n  args: {\n    title: {\n      type: GraphQLString,\n    },\n    description: {\n      type: GraphQLString,\n    },\n    coverPhotoUrl: {\n      type: GraphQLString,\n    },\n  },\n  resolve: async (\n    value,\n    { title, description, coverPhotoUrl },\n    { sessionToken }\n  ) => {\n    const session = await isAuthorized(sessionToken);\n\n    const Project = Parse.Object.extend(\"Project\");\n    const project = new Project();\n\n    project.set({\n      title,\n      description,\n      coverPhotoUrl,\n      user: session.get(\"user\"),\n    });\n\n    return project.save();\n  },\n};\n\nconst createMulls = {\n  type: mullsType,\n  description: \"add new project\",\n  args: {\n    mullTitle: {\n      type: GraphQLString,\n    },\n    photos: {\n      type: GraphQLString,\n    },\n    projectTitle: {\n      type: GraphQLString,\n    },\n    name: {\n      type: GraphQLString,\n    },\n  },\n  resolve: async (\n    value,\n    { name, photos, projectTitle, mullTitle },\n    { sessionToken }\n  ) => {\n    const session = await isAuthorized(sessionToken);\n\n    // const MullsProjectObject = Parse.Object.extend(\"MullsProject\");\n    // const mullsProject = new MullsProjectObject();\n\n    // mullsProject.set({\n    //   photos,\n    //   name,\n    //   projectTitle,\n    // });\n    // mullsProject.save();\n\n    // mullsProject.photos = photos;\n    // mullsProject.name = name;\n    // mullsProject.projectTitle = projectTitle;\n    // console.log(mullsProject, \"mullsProject\");\n\n    const MullsObject = Parse.Object.extend(\"Mulls\");\n    var mullsQuery = new Parse.Query(MullsObject);\n\n    const mulls1 = new MullsObject();\n    const userInSession = session.get(\"user\");\n    const userId = userInSession.id;\n\n    //    mullsQuery.equalTo(\"title\", title);\n\n    // if ((await mullsQuery.first()) === undefined) {\n    //   currentMulls = new MullsObject();\n    //   currentMulls.set(\"title\", title);\n    // } else {\n    //   currentMulls = await mullsQuery.first();\n    // }\n\n    mulls1.set({\n      mullTitle,\n      name,\n      photos,\n      projectTitle,\n      userId,\n      //user: session.get(\"user\"),\n    });\n\n    return mulls1.save();\n  },\n};\n\nconst createMulls2 = {\n  type: mullsType,\n  description: \"add new project\",\n  args: {\n    title: {\n      type: GraphQLList(GraphQLString),\n    },\n    photos: {\n      type: GraphQLString,\n    },\n    projectTitle: {\n      type: GraphQLString,\n    },\n    name: {\n      type: GraphQLString,\n    },\n  },\n  resolve: async (\n    value,\n    { title, photos, projectTitle, name },\n    { sessionToken }\n  ) => {\n    // const session = await isAuthorized(sessionToken);\n\n    const MullsProjectObject = Parse.Object.extend(\"MullsProject\");\n    const mullsProject = new MullsProjectObject();\n\n    // mullsProject.set({\n    //   photos,\n    //   name,\n    //   projectTitle,\n    // });\n    //mullsProject.save();\n\n    mullsProject.photos = photos;\n    mullsProject.name = name;\n    mullsProject.projectTitle = projectTitle;\n    console.log(mullsProject, \"mullsProject\");\n\n    const MullsObject = Parse.Object.extend(\"Mulls\");\n    var mullsQuery = new Parse.Query(MullsObject);\n\n    let currentMulls = null;\n\n    const newMulls = new MullsObject();\n\n    //    mullsQuery.equalTo(\"title\", title);\n\n    // if ((await mullsQuery.first()) === undefined) {\n    //   currentMulls = new MullsObject();\n    //   currentMulls.set(\"title\", title);\n    // } else {\n    //   currentMulls = await mullsQuery.first();\n    // }\n\n    newMulls.set(\"mullsProject\", mullsProject);\n\n    //newMulls.set(\"title\", title);\n    //newMulls.set(\"user\", session.get(\"user\"));\n    // newMulls.mullsProject = mullsProject;\n    // newMulls.title = title;\n    //newMulls.user = session.get(\"user\");\n\n    return newMulls.save(null, { title: title });\n    // return newMulls.save({\n    //   \"mullsProject\": mullsProject,\n    //   title: title,\n    //   user: session.get(\"user\"),\n    // });\n\n    // const User = Parse.Object.extend(\"User\");\n\n    // const query = new Parse.Query(User);\n\n    // const userInSession = session.get(\"user\");\n\n    // query.equalTo(\"objectId\", userInSession.id);\n\n    // const currentUser = await query.first();\n\n    // // currentUser.set({\n    // //   mulls: currentMulls,\n    // // });\n    // console.log(\"goodnight\");\n\n    // return currentUser.save(null, {\n    //   mulls: currentMulls,\n    //   useMasterKey: true,\n    //   sessionToken,\n    // });\n  },\n};\n\nconst updateProject = {\n  type: projectType,\n  description: \"update project\",\n  args: {\n    projectId: {\n      type: GraphQLString,\n    },\n    photoUrl: {\n      type: GraphQLString,\n    },\n  },\n  resolve: async (value, { projectId, photoUrl }, { sessionToken }) => {\n    const Project = Parse.Object.extend(\"Project\");\n\n    var project = new Parse.Query(Project);\n\n    project.equalTo(\"objectId\", projectId);\n    const currentProject = await project.first();\n\n    currentProject.set({\n      photoUrl,\n      published: true,\n    });\n\n    return currentProject.save();\n  },\n};\n\nconst updateProfile = {\n  type: userType,\n  description: \"update profile\",\n  args: {\n    username: {\n      type: GraphQLString,\n    },\n    occupation: {\n      type: GraphQLString,\n    },\n    company: {\n      type: GraphQLString,\n    },\n    location: {\n      type: GraphQLString,\n    },\n    personalWebsite: {\n      type: GraphQLString,\n    },\n    bio: {\n      type: GraphQLString,\n    },\n    profileImage: {\n      type: GraphQLString,\n    },\n  },\n  resolve: async (\n    value,\n    {\n      username,\n      occupation,\n      company,\n      location,\n      personalWebsite,\n      bio,\n      profileImage,\n    },\n    { sessionToken }\n  ) => {\n    const session = await isAuthorized(sessionToken);\n\n    const User = Parse.Object.extend(\"User\");\n\n    const query = new Parse.Query(User);\n\n    const userInSession = session.get(\"user\");\n\n    query.equalTo(\"objectId\", userInSession.id);\n\n    const currentUser = await query.first();\n\n    currentUser.set({\n      username,\n      occupation,\n      company,\n      location,\n      personalWebsite,\n      bio,\n      profileImage,\n    });\n\n    return currentUser.save(null, { useMasterKey: true, sessionToken });\n  },\n};\n\nconst updateMulls = {\n  type: mullsType,\n  description: \"update profile\",\n  args: {\n    title: {\n      type: GraphQLString,\n    },\n    photos: {\n      type: GraphQLString,\n    },\n    name: {\n      type: GraphQLString,\n    },\n  },\n  resolve: async (value, { title, photos, name }, { sessionToken }) => {\n    const session = await isAuthorized(sessionToken);\n\n    const Mulls = Parse.Object.extend(\"Mulls\");\n    const Project = Parse.Object.extend(\"Project\");\n\n    var project = new Parse.Query(Project);\n    const mulls = new Mulls();\n    project.equalTo(\"objectId\", projectId);\n    const currentProject = await project.first();\n\n    mulls.set({\n      title,\n      photos,\n      name,\n      user: session.get(\"user\"),\n    });\n\n    return project.save();\n  },\n};\n\n// const createMulls = {\n//   type: userType,\n//   description: \"update mullboards\",\n//   args: {\n//     mulls: {\n//       type: mullsType,\n//     },\n//   },\n//   resolve: async (value, { mulls }, { sessionToken }) => {\n//     const session = await isAuthorized(sessionToken);\n\n//     const User = Parse.Object.extend(\"User\");\n\n//     const query = new Parse.Query(User);\n\n//     const userInSession = session.get(\"user\");\n\n//     query.equalTo(\"objectId\", userInSession.id);\n\n//     // const currentUser = await query.first();\n\n//     // const defaultMulls = [\"Branding\", \"Illustration\", \"UI/UX\"];\n\n//     // const newMullsList = defaultMulls.concat(mulls.title);\n//     // const userMulls = currentUser.mulls;\n//     // userMulls.title = newMullsList;\n\n//     // currentUser.set({\n//     //   mulls: userMulls,\n//     // });\n\n//     //return currentUser.save(null, { useMasterKey: true, sessionToken });\n//   },\n// };\n\nconst createMulls1 = {\n  type: userType,\n  description: \"add new project\",\n\n  args: {\n    title: {\n      type: GraphQLString,\n    },\n  },\n  resolve: async (value, { title, photos }, { sessionToken }) => {\n    const session = await isAuthorized(sessionToken);\n\n    const User = Parse.Object.extend(\"User\");\n    const Mulls = Parse.Object.extend(\"Mulls\");\n    const query = new Parse.Query(User);\n    //var mullboards = new Mulls();\n    // mullboards.set(\"photos\", photos);\n    //mullboards.set(\"title\", title);\n\n    const userInSession = session.get(\"user\");\n\n    query.equalTo(\"objectId\", userInSession.id);\n\n    const currentUser = await query.first();\n\n    var query1 = new Parse.Query(User);\n    //const mullsTitle = [];\n    query1\n      .get(userInSession.id)\n      .then((object) => {\n        let mullsTitle = [];\n        let formerMullsTitle = object.get(\"mullsTitle\");\n        const defaultTitles = [\"Branding\", \"Illustration\", \"UI/UX\"];\n        if (formerMullsTitle.length === 0) {\n          formerMullsTitle = formerMullsTitle.concat(defaultTitles);\n          console.log(\"length less than zero\");\n        }\n        mullsTitle = formerMullsTitle.concat(title);\n\n        console.log(mullsTitle, \"pizza\");\n\n        currentUser.set({\n          mullsTitle,\n        });\n\n        return currentUser.save(null, { useMasterKey: true, sessionToken });\n      })\n      .catch((error) => {\n        // error is an instance of parse.error.\n      });\n  },\n};\n\nvar mutationTypes = new GraphQLObjectType({\n  name: \"mutation\",\n  description: \"All mutation\",\n  fields: () => ({\n    signUp,\n    login,\n    createPost,\n    createProject,\n    updateProject,\n    updateProfile,\n    createMulls,\n    //updateMulls,\n  }),\n});\n\nexport const Schema = new GraphQLSchema({\n  query: queryTypes,\n  mutation: mutationTypes,\n});\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1621039678528
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/oladayoogundipe/eventManagement/graphql/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/oladayoogundipe/eventManagement\",\"filename\":\"/Users/oladayoogundipe/eventManagement/graphql/schema.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/oladayoogundipe/eventManagement\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.14.2": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/oladayoogundipe/eventManagement/graphql/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/oladayoogundipe/eventManagement",
      "filename": "/Users/oladayoogundipe/eventManagement/graphql/schema.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/oladayoogundipe/eventManagement",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/oladayoogundipe/eventManagement/graphql/schema.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/oladayoogundipe/eventManagement/graphql/schema.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/oladayoogundipe/eventManagement/graphql/",
        "sourceFileName": "schema.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.schema = void 0;\n\nvar _require = require(\"graphql\"),\n    buildSchema = _require.buildSchema;\n\nvar graphql = require(\"graphql\");\n\nvar schema = graphql.buildSchema(\"\\n  \\n\\ntype Stages  {\\n    id: String\\n    name: String\\n  }\\n  type Apps {\\n    id: String\\n    name: String\\n    \\n  }\\n  type Data  {\\n    apps: [Apps]\\n    stages: [Stages]\\n    events: [Events]\\n  }\\n  type Events {\\n    id: String\\n    appId: String\\n    stageId: String\\n    name: String\\n    description: String\\n    image: String\\n    startsAt: Int!\\n    endsAt: Int!\\n  }\\n  type Query {\\n    data: Data\\n    getAllApps: [Apps]\\n    getAllStages: [Stages]\\n    getAllEvents: [Events]\\n    getAppById(id:String!): Apps\\n    getStageById(id:String!): Stages\\n    getStageByName(name:String!): [Stages]\\n    getEventById(id:String!): Events\\n    getEventByName(name:String!): [Events]\\n    getEventsByDate(startsAt:Int! endsAt:Int!): [Events]\\n    getEventsByAppId(appId:String!): [Events]\\n    getStagesByEventId(eventId:String!): Stages\\n    getEventsByStageId(stageId:String!): [Events]\\n  }\\n\\n  type Mutation {\\n    addStage(name:String!):Data\\n    editStage(id: String! name:String!):Data\\n    removeStage(id: String!):Data\\n    addEvent(appId:String! stageId:String! name: String! description: String! image:String! startsAt:Int! endsAt:Int!):Data\\n    editEvent(id:String! appId:String! stageId:String! name: String! description: String! image:String! startsAt:Int! endsAt:Int!):Data\\n    removeEvent(id: String!):Data\\n}\\n  \\n\");\nexports.schema = schema;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNjaGVtYS5qcyJdLCJuYW1lcyI6WyJyZXF1aXJlIiwiYnVpbGRTY2hlbWEiLCJncmFwaHFsIiwic2NoZW1hIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUEsZUFBc0JBLE9BQU8sQ0FBQyxTQUFELENBQTdCO0FBQUEsSUFBTUMsV0FBTixZQUFNQSxXQUFOOztBQUNBLElBQUlDLE9BQU8sR0FBR0YsT0FBTyxDQUFDLFNBQUQsQ0FBckI7O0FBQ08sSUFBTUcsTUFBTSxHQUFHRCxPQUFPLENBQUNELFdBQVIsbTBDQUFmIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9vbGFkYXlvb2d1bmRpcGUvZXZlbnRNYW5hZ2VtZW50L2dyYXBocWwvIiwic291cmNlc0NvbnRlbnQiOlsidmFyIHsgYnVpbGRTY2hlbWEgfSA9IHJlcXVpcmUoXCJncmFwaHFsXCIpO1xudmFyIGdyYXBocWwgPSByZXF1aXJlKFwiZ3JhcGhxbFwiKTtcbmV4cG9ydCBjb25zdCBzY2hlbWEgPSBncmFwaHFsLmJ1aWxkU2NoZW1hKGBcbiAgXG5cbnR5cGUgU3RhZ2VzICB7XG4gICAgaWQ6IFN0cmluZ1xuICAgIG5hbWU6IFN0cmluZ1xuICB9XG4gIHR5cGUgQXBwcyB7XG4gICAgaWQ6IFN0cmluZ1xuICAgIG5hbWU6IFN0cmluZ1xuICAgIFxuICB9XG4gIHR5cGUgRGF0YSAge1xuICAgIGFwcHM6IFtBcHBzXVxuICAgIHN0YWdlczogW1N0YWdlc11cbiAgICBldmVudHM6IFtFdmVudHNdXG4gIH1cbiAgdHlwZSBFdmVudHMge1xuICAgIGlkOiBTdHJpbmdcbiAgICBhcHBJZDogU3RyaW5nXG4gICAgc3RhZ2VJZDogU3RyaW5nXG4gICAgbmFtZTogU3RyaW5nXG4gICAgZGVzY3JpcHRpb246IFN0cmluZ1xuICAgIGltYWdlOiBTdHJpbmdcbiAgICBzdGFydHNBdDogSW50IVxuICAgIGVuZHNBdDogSW50IVxuICB9XG4gIHR5cGUgUXVlcnkge1xuICAgIGRhdGE6IERhdGFcbiAgICBnZXRBbGxBcHBzOiBbQXBwc11cbiAgICBnZXRBbGxTdGFnZXM6IFtTdGFnZXNdXG4gICAgZ2V0QWxsRXZlbnRzOiBbRXZlbnRzXVxuICAgIGdldEFwcEJ5SWQoaWQ6U3RyaW5nISk6IEFwcHNcbiAgICBnZXRTdGFnZUJ5SWQoaWQ6U3RyaW5nISk6IFN0YWdlc1xuICAgIGdldFN0YWdlQnlOYW1lKG5hbWU6U3RyaW5nISk6IFtTdGFnZXNdXG4gICAgZ2V0RXZlbnRCeUlkKGlkOlN0cmluZyEpOiBFdmVudHNcbiAgICBnZXRFdmVudEJ5TmFtZShuYW1lOlN0cmluZyEpOiBbRXZlbnRzXVxuICAgIGdldEV2ZW50c0J5RGF0ZShzdGFydHNBdDpJbnQhIGVuZHNBdDpJbnQhKTogW0V2ZW50c11cbiAgICBnZXRFdmVudHNCeUFwcElkKGFwcElkOlN0cmluZyEpOiBbRXZlbnRzXVxuICAgIGdldFN0YWdlc0J5RXZlbnRJZChldmVudElkOlN0cmluZyEpOiBTdGFnZXNcbiAgICBnZXRFdmVudHNCeVN0YWdlSWQoc3RhZ2VJZDpTdHJpbmchKTogW0V2ZW50c11cbiAgfVxuXG4gIHR5cGUgTXV0YXRpb24ge1xuICAgIGFkZFN0YWdlKG5hbWU6U3RyaW5nISk6RGF0YVxuICAgIGVkaXRTdGFnZShpZDogU3RyaW5nISBuYW1lOlN0cmluZyEpOkRhdGFcbiAgICByZW1vdmVTdGFnZShpZDogU3RyaW5nISk6RGF0YVxuICAgIGFkZEV2ZW50KGFwcElkOlN0cmluZyEgc3RhZ2VJZDpTdHJpbmchIG5hbWU6IFN0cmluZyEgZGVzY3JpcHRpb246IFN0cmluZyEgaW1hZ2U6U3RyaW5nISBzdGFydHNBdDpJbnQhIGVuZHNBdDpJbnQhKTpEYXRhXG4gICAgZWRpdEV2ZW50KGlkOlN0cmluZyEgYXBwSWQ6U3RyaW5nISBzdGFnZUlkOlN0cmluZyEgbmFtZTogU3RyaW5nISBkZXNjcmlwdGlvbjogU3RyaW5nISBpbWFnZTpTdHJpbmchIHN0YXJ0c0F0OkludCEgZW5kc0F0OkludCEpOkRhdGFcbiAgICByZW1vdmVFdmVudChpZDogU3RyaW5nISk6RGF0YVxufVxuICBcbmApO1xuXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "schema.js"
      ],
      "names": [
        "require",
        "buildSchema",
        "graphql",
        "schema"
      ],
      "mappings": ";;;;;;;AAAA,eAAsBA,OAAO,CAAC,SAAD,CAA7B;AAAA,IAAMC,WAAN,YAAMA,WAAN;;AACA,IAAIC,OAAO,GAAGF,OAAO,CAAC,SAAD,CAArB;;AACO,IAAMG,MAAM,GAAGD,OAAO,CAACD,WAAR,m0CAAf",
      "sourceRoot": "/Users/oladayoogundipe/eventManagement/graphql/",
      "sourcesContent": [
        "var { buildSchema } = require(\"graphql\");\nvar graphql = require(\"graphql\");\nexport const schema = graphql.buildSchema(`\n  \n\ntype Stages  {\n    id: String\n    name: String\n  }\n  type Apps {\n    id: String\n    name: String\n    \n  }\n  type Data  {\n    apps: [Apps]\n    stages: [Stages]\n    events: [Events]\n  }\n  type Events {\n    id: String\n    appId: String\n    stageId: String\n    name: String\n    description: String\n    image: String\n    startsAt: Int!\n    endsAt: Int!\n  }\n  type Query {\n    data: Data\n    getAllApps: [Apps]\n    getAllStages: [Stages]\n    getAllEvents: [Events]\n    getAppById(id:String!): Apps\n    getStageById(id:String!): Stages\n    getStageByName(name:String!): [Stages]\n    getEventById(id:String!): Events\n    getEventByName(name:String!): [Events]\n    getEventsByDate(startsAt:Int! endsAt:Int!): [Events]\n    getEventsByAppId(appId:String!): [Events]\n    getStagesByEventId(eventId:String!): Stages\n    getEventsByStageId(stageId:String!): [Events]\n  }\n\n  type Mutation {\n    addStage(name:String!):Data\n    editStage(id: String! name:String!):Data\n    removeStage(id: String!):Data\n    addEvent(appId:String! stageId:String! name: String! description: String! image:String! startsAt:Int! endsAt:Int!):Data\n    editEvent(id:String! appId:String! stageId:String! name: String! description: String! image:String! startsAt:Int! endsAt:Int!):Data\n    removeEvent(id: String!):Data\n}\n  \n`);\n\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1621126587810
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/oladayoogundipe/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/oladayoogundipe/eventManagement\",\"filename\":\"/Users/oladayoogundipe/binaryTreeSearch.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/oladayoogundipe/eventManagement\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.14.2": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/oladayoogundipe/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/oladayoogundipe/eventManagement",
      "filename": "/Users/oladayoogundipe/binaryTreeSearch.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/oladayoogundipe/eventManagement",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/oladayoogundipe/binaryTreeSearch.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/oladayoogundipe/binaryTreeSearch.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/oladayoogundipe/",
        "sourceFileName": "binaryTreeSearch.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar Node = /*#__PURE__*/function () {\n  function Node(val) {\n    _classCallCheck(this, Node);\n\n    this.val = val;\n    this.right = null;\n    this.left = null;\n  }\n\n  _createClass(Node, [{\n    key: \"isPresent\",\n    value: function isPresent(val, root) {\n      var currentNode = root,\n          match = true;\n\n      while (currentNode && match) {\n        if (val < currentNode.val) {\n          currentNode = currentNode.left;\n        } else if (val > currentNode.val) {\n          currentNode = currentNode.right;\n        } else match = false;\n      }\n\n      if (match) return 1;\n      return 0;\n    }\n  }]);\n\n  return Node;\n}();\n\nvar tree = new Node(4);\nconsole.log(tree.isPresent(41, tree));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJpbmFyeVRyZWVTZWFyY2guanMiXSwibmFtZXMiOlsiTm9kZSIsInZhbCIsInJpZ2h0IiwibGVmdCIsInJvb3QiLCJjdXJyZW50Tm9kZSIsIm1hdGNoIiwidHJlZSIsImNvbnNvbGUiLCJsb2ciLCJpc1ByZXNlbnQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O0lBQU1BLEk7QUFDSixnQkFBWUMsR0FBWixFQUFpQjtBQUFBOztBQUNmLFNBQUtBLEdBQUwsR0FBV0EsR0FBWDtBQUNBLFNBQUtDLEtBQUwsR0FBYSxJQUFiO0FBQ0EsU0FBS0MsSUFBTCxHQUFZLElBQVo7QUFDRDs7OztXQUVELG1CQUFVRixHQUFWLEVBQWVHLElBQWYsRUFBcUI7QUFDbkIsVUFBSUMsV0FBVyxHQUFHRCxJQUFsQjtBQUFBLFVBQ0VFLEtBQUssR0FBRyxJQURWOztBQUdBLGFBQU9ELFdBQVcsSUFBSUMsS0FBdEIsRUFBNkI7QUFDM0IsWUFBSUwsR0FBRyxHQUFHSSxXQUFXLENBQUNKLEdBQXRCLEVBQTJCO0FBQ3pCSSxVQUFBQSxXQUFXLEdBQUdBLFdBQVcsQ0FBQ0YsSUFBMUI7QUFDRCxTQUZELE1BRU8sSUFBSUYsR0FBRyxHQUFHSSxXQUFXLENBQUNKLEdBQXRCLEVBQTJCO0FBQ2hDSSxVQUFBQSxXQUFXLEdBQUdBLFdBQVcsQ0FBQ0gsS0FBMUI7QUFDRCxTQUZNLE1BRUFJLEtBQUssR0FBRyxLQUFSO0FBQ1I7O0FBRUQsVUFBSUEsS0FBSixFQUFXLE9BQU8sQ0FBUDtBQUNYLGFBQU8sQ0FBUDtBQUNEOzs7Ozs7QUFHSCxJQUFNQyxJQUFJLEdBQUcsSUFBSVAsSUFBSixDQUFTLENBQVQsQ0FBYjtBQUNBUSxPQUFPLENBQUNDLEdBQVIsQ0FBWUYsSUFBSSxDQUFDRyxTQUFMLENBQWUsRUFBZixFQUFtQkgsSUFBbkIsQ0FBWiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvb2xhZGF5b29ndW5kaXBlLyIsInNvdXJjZXNDb250ZW50IjpbImNsYXNzIE5vZGUge1xuICBjb25zdHJ1Y3Rvcih2YWwpIHtcbiAgICB0aGlzLnZhbCA9IHZhbDtcbiAgICB0aGlzLnJpZ2h0ID0gbnVsbDtcbiAgICB0aGlzLmxlZnQgPSBudWxsO1xuICB9XG5cbiAgaXNQcmVzZW50KHZhbCwgcm9vdCkge1xuICAgIGxldCBjdXJyZW50Tm9kZSA9IHJvb3QsXG4gICAgICBtYXRjaCA9IHRydWU7XG5cbiAgICB3aGlsZSAoY3VycmVudE5vZGUgJiYgbWF0Y2gpIHtcbiAgICAgIGlmICh2YWwgPCBjdXJyZW50Tm9kZS52YWwpIHtcbiAgICAgICAgY3VycmVudE5vZGUgPSBjdXJyZW50Tm9kZS5sZWZ0O1xuICAgICAgfSBlbHNlIGlmICh2YWwgPiBjdXJyZW50Tm9kZS52YWwpIHtcbiAgICAgICAgY3VycmVudE5vZGUgPSBjdXJyZW50Tm9kZS5yaWdodDtcbiAgICAgIH0gZWxzZSBtYXRjaCA9IGZhbHNlO1xuICAgIH1cblxuICAgIGlmIChtYXRjaCkgcmV0dXJuIDE7XG4gICAgcmV0dXJuIDA7XG4gIH1cbn1cblxuY29uc3QgdHJlZSA9IG5ldyBOb2RlKDQpO1xuY29uc29sZS5sb2codHJlZS5pc1ByZXNlbnQoNDEsIHRyZWUpKTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "binaryTreeSearch.js"
      ],
      "names": [
        "Node",
        "val",
        "right",
        "left",
        "root",
        "currentNode",
        "match",
        "tree",
        "console",
        "log",
        "isPresent"
      ],
      "mappings": ";;;;;;;;IAAMA,I;AACJ,gBAAYC,GAAZ,EAAiB;AAAA;;AACf,SAAKA,GAAL,GAAWA,GAAX;AACA,SAAKC,KAAL,GAAa,IAAb;AACA,SAAKC,IAAL,GAAY,IAAZ;AACD;;;;WAED,mBAAUF,GAAV,EAAeG,IAAf,EAAqB;AACnB,UAAIC,WAAW,GAAGD,IAAlB;AAAA,UACEE,KAAK,GAAG,IADV;;AAGA,aAAOD,WAAW,IAAIC,KAAtB,EAA6B;AAC3B,YAAIL,GAAG,GAAGI,WAAW,CAACJ,GAAtB,EAA2B;AACzBI,UAAAA,WAAW,GAAGA,WAAW,CAACF,IAA1B;AACD,SAFD,MAEO,IAAIF,GAAG,GAAGI,WAAW,CAACJ,GAAtB,EAA2B;AAChCI,UAAAA,WAAW,GAAGA,WAAW,CAACH,KAA1B;AACD,SAFM,MAEAI,KAAK,GAAG,KAAR;AACR;;AAED,UAAIA,KAAJ,EAAW,OAAO,CAAP;AACX,aAAO,CAAP;AACD;;;;;;AAGH,IAAMC,IAAI,GAAG,IAAIP,IAAJ,CAAS,CAAT,CAAb;AACAQ,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,SAAL,CAAe,EAAf,EAAmBH,IAAnB,CAAZ",
      "sourceRoot": "/Users/oladayoogundipe/",
      "sourcesContent": [
        "class Node {\n  constructor(val) {\n    this.val = val;\n    this.right = null;\n    this.left = null;\n  }\n\n  isPresent(val, root) {\n    let currentNode = root,\n      match = true;\n\n    while (currentNode && match) {\n      if (val < currentNode.val) {\n        currentNode = currentNode.left;\n      } else if (val > currentNode.val) {\n        currentNode = currentNode.right;\n      } else match = false;\n    }\n\n    if (match) return 1;\n    return 0;\n  }\n}\n\nconst tree = new Node(4);\nconsole.log(tree.isPresent(41, tree));\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1614304415597
  }
}